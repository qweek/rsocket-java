allprojects {
    apply plugin: 'java'
    apply plugin: "jacoco"

    jacoco {
        toolVersion = "0.7.9"
    }
}

subprojects {
    jacocoTestReport {
        additionalSourceDirs = files(sourceSets.main.allSource.srcDirs)
        sourceDirectories = files(sourceSets.main.allSource.srcDirs)
        classDirectories =  files(sourceSets.main.output)
        reports {
            html.enabled = true
            xml.enabled = true
        }
    }
}

task jacocoRootReport(type: JacocoReport) {
    dependsOn(subprojects.test)

    additionalSourceDirs = files(subprojects.sourceSets.main.allSource.srcDirs)
    sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories = files(subprojects.sourceSets.main.output)
    executionData = files(subprojects.jacocoTestReport.executionData)

    doFirst {
        executionData = files(executionData.findAll { it.exists() })
    }

    reports {
        html.enabled = true // human readable
        xml.enabled = true // required by coveralls
    }
}

tasks.check.dependsOn tasks.jacocoRootReport

//coveralls {
//    sourceDirs = subprojects.sourceSets.main.allSource.srcDirs.flatten()
//    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
//}
//
//tasks.coveralls {
//    dependsOn jacocoRootReport
//}

//task build {
//    dependsOn tasks.jacocoTestReport
//}


/*
task jacocoRootTestReport(type: JacocoReport) {
    sourceSets sourceSets.main

    def jacocoTestFiles = ["$buildDir/jacoco/test.exec"]
    subprojects.each { p ->
        def coverageFileLocation = "$p.buildDir/jacoco/test.exec"
        if (new File(coverageFileLocation).exists()) {
            jacocoTestFiles << coverageFileLocation
        }
    }

    logger.info('Aggregating next JaCoCo Coverage Files: {}', jacocoTestFiles)
    executionData files(jacocoTestFiles)

    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
    }
}
*/
// junit 5
//jacoco {
//    toolVersion = '0.7.9'
//    applyTo junitPlatformTest
//}
//junitPlatformTest {
//    jacoco {
//        destinationFile = file("$buildDir/jacoco/test.exec")
//    }
//}